# ===============================
# webserv.conf — exemple complet
# ===============================

# ---------- SERVER 1 (par défaut pour 127.0.0.1:8080) ----------
server {
	# Choix du host et du port (III.3 • puce 1)
	listen 127.0.0.1:8080;

	# Noms de serveur (III.3 • puce 2)
	server_name example.local ;

	# Pages d’erreur par défaut du serveur (III.3 • puce 4)
	# (III.1 dit aussi que le serveur doit avoir des pages d’erreur par défaut si rien n’est fourni)
	error_page 400 /errors/400.html;
	error_page 403 /errors/403.html;
	error_page 404 /errors/404.html;
	error_page 405 /errors/405.html;
	error_page 413 /errors/413.html;   # body trop grand
	error_page 500 /errors/500.html;
	error_page 502 /errors/502.html;
	error_page 503 /errors/503.html;

	# Taille max du corps de requête client (III.3 • puce 5)
	client_max_body_size 20M;

	# Racine et index par défaut au niveau serveur (utilisés si la location ne redéfinit pas)
	root /var/www/example;
	index index.html;

	# ------------- Routes (locations) (III.3 • puce 6) -------------

	# / — site statique (doit permettre de servir un site statique : III.1)
	location / {
		# Méthodes autorisées (III.3 • puce 6 • sous-puce 1)
		allow_methods GET;

		# Fichier par défaut quand la cible est un répertoire (III.3 • sous-puce "default file")
		indexl index.html;

		# Listing de répertoire (III.3 • sous-puce "enable/disable directory listing")
		autoindex off;
	}

	# /images — autre root + listing activé
	location /images/ {
		allow_methods GET;
		# Redéfinition de la racine pour cette route (III.3 • sous-puce "directory or file")
		rootl /var/www/assets;
		autoindex on;
		# index non défini ici ⇒ hérite de "index" du serveur si nécessaire
	}

	# /upload — réception de fichiers (III.1 "Clients must be able to upload files" + III.3 • sous-puce "Allow ... uploaded files")
	location /upload/ {
		# POST pour upload
		allow_methods POST;

		# Activer l’upload et où sauvegarder (III.3 • sous-puce correspondante)
		upload_enable on;
		upload_store /var/www/uploads;

		# Optionnel : on peut resserrer la taille sur une route donnée si on veut tester le parser
		client_max_body_sizel 8M;
	}

	# /delete-me — suppression (III.1 "You need at least GET, POST, DELETE")
	location /delete-me/ {
		allow_methods DELETE;
		rootl /var/www/trash;
		autoindex off;
	}

	# /old — redirection HTTP (III.3 • sous-puce "Define an HTTP redirect")
	location /old {
		return 301 http://example.local/new;
	}

	# CGI PHP par extension (III.3 • sous-puces "Execute CGI based on extension" + "Make it work with POST and GET")
	location /cgi-bin/php/ {
		allow_methods GET POST;

		# Associer une extension à un interpréteur CGI
		cgi_extension .php;
		cgi_path /usr/bin/php-cgi;

		# Répertoire de travail du CGI (III.3 • notes sur le "correct directory")
		cgi_working_directory /var/www/phpapp;

		# Fichier par défaut si /cgi-bin/php/ est visé sans fichier (utile pour parser)
		cgi_index index.php;

		# Transmettre PATH_INFO complet (III.3 • notes “use the full path as PATH_INFO”)
		cgi_pass_path_info on;
	}

	# CGI Python par extension (autre exemple de mapping)
	location /cgi-bin/py/ {
		allow_methods GET POST;
		cgi_extension .py;
		cgi_path /usr/bin/python3;
		cgi_working_directory /var/www/pyapp;
		cgi_index app.py;
		cgi_pass_path_info on;
	}
}

# ---------- SERVER 2 (même host:port, autre server_name) ----------
# Le “premier” server déclaré pour un host:port est le serveur par défaut (III.3 • puce 3)
server {
	listen 127.0.0.1:8080;
	server_name api.example.local;

	# Racine spécifique
	root /var/www/api;
	index index.html;

	# Route d’API GET/POST
	location /v1/ {
		allow_methods GET POST;
		autoindex off;
	}

	# Route DELETE dédiée
	location /v1/purge/ {
		allow_methods DELETE;
		autoindex off;
	}

	# Redirection temporaire
	location /beta {
		return 302 http://api.example.local/v2/;
	}

	# Erreurs spécifiques à cette vHost
	error_page 404 /api-errors/404.html;
	error_page 500 /api-errors/500.html;
}

# ---------- SERVER 3 (autre port, écoute multiple requise par III.1) ----------
server {
	listen 0.0.0.0:8081;     # autre port (III.1 "listen to multiple ports")
	server_name _;
	root /var/www/alt;
	index index.html;

	# Listing activé pour tester l’autoindex
	location /public/ {
		allow_methods GET;
		autoindex on;
	}

	# Upload sur ce port aussi
	location /upload/ {
		allow_methods POST;
		upload_enable on;
		upload_store /var/www/alt/uploads;
		client_max_body_sizel 50M;
	}

	# Démo de redirection vers un autre host:port
	location /goto-main {
		return 301 http://example.local:8080/;
	}
}